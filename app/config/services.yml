# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    app.services.wordpress.woocommerce:
        public: true
        class: AppBundle\Services\Wordpress\WoocommerceService
        arguments: ["@service_container"]

    app.services.wordpress.apiwordpress:
        public: true
        class: AppBundle\Services\Wordpress\ApiWordpressService
        arguments: ["@service_container"]

    app.services.zanox.toysnrus:
        public: true
        class: AppBundle\Services\Zanox\ToysnrusService
        arguments: ["@service_container"]

    app.services.zanox.playmobile:
        public: true
        class: AppBundle\Services\Zanox\PlaymobileService
        arguments: ["@service_container"]

    app.services.zanox.oxybul:
        public: true
        class: AppBundle\Services\Zanox\OxybulService
        arguments: ["@service_container"]

    app.services.zanox.cdiscount:
        public: true
        class: AppBundle\Services\Zanox\CdiscountService
        arguments: ["@service_container"]

    app.services.zanox.mistergooddeal:
        public: true
        class: AppBundle\Services\Zanox\MisterGoodDealService
        arguments: ["@service_container"]

    app.services.zanox.decoanniv:
        public: true
        class: AppBundle\Services\Zanox\DecoannivService
        arguments: ["@service_container"]


    app.command.import.playmobile:
        class: AppBundle\Command\ImportPlaymobileCommand
        arguments: ["@service_container"]
        tags:
            -  { name: console.command }

    app.command.import.oxybul:
        class: AppBundle\Command\ImportOxybulCommand
        arguments: ["@service_container"]
        tags:
            -  { name: console.command }


    app.command.import.cdiscount:
        class: AppBundle\Command\ImportCdiscountCommand
        arguments: ["@service_container"]
        tags:
            -  { name: console.command }

    app.command.import.mistergooddeal:
        class: AppBundle\Command\ImportMisterGoodDealCommand
        arguments: ["@service_container"]
        tags:
            -  { name: console.command }

    app.services.supervisord.xmlrpc:
        public: true
        class: AppBundle\Services\Supervisord\XmlRpcService



    app.services.workers.downloadfiles:
        public: true
        class: AppBundle\Services\Workers\DownloadService
        arguments: ["@service_container"]


    app.services.workers.parsefiles:
        public: true
        class: AppBundle\Services\Workers\ParseService
        arguments: ["@service_container"]

    app.services.workers.checkproducts:
        public: true
        class: AppBundle\Services\Workers\CheckProductService
        arguments: ["@service_container"]

    app.services.workers.createproducts:
        public: true
        class: AppBundle\Services\Workers\CreateProductService
        arguments: ["@service_container"]

    app.services.workers.updateproducts:
        public: true
        class: AppBundle\Services\Workers\UpdateProductService
        arguments: ["@service_container"]

    app.services.import.awin:
        public: true
        class: AppBundle\Services\Import\AwinService
        arguments: ["@service_container", "@ekino.wordpress.manager.post_meta_default", "@monolog.logger"]

    app.services.import.effiliation:
        public: true
        class: AppBundle\Services\Import\EffiliateService
        arguments: ["@service_container", "@ekino.wordpress.manager.post_meta_default", "@monolog.logger"]






